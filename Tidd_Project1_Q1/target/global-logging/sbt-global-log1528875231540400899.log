[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\river\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\river\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.1 (Eclipse OpenJ9 Java 1.8.0_265)
[debug]       Load.loadUnit: plugins took 64.6023ms
[debug]       Load.loadUnit: defsScala took 0.2722ms
[debug] [Loading] Scanning directory C:\Users\river\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.7138 ms
[debug]           Load.resolveProject(global-plugins) took 32.0534ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\river\.sbt\1.0\plugins, plugins: List(<none>))) took 56.792ms
[debug] [Loading] Done in C:\Users\river\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 73.1102ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2045ms
[debug]     Load.loadUnit(file:/C:/Users/river/.sbt/1.0/plugins/, ...) took 142.7642ms
[debug]   Load.apply: load took 280.9398ms
[debug]   Load.apply: resolveProjects took 6.7473ms
[debug]   Load.apply: finalTransforms took 89.7661ms
[debug]   Load.apply: config.delegates took 5.5169ms
[debug]   Load.apply: Def.make(settings)... took 775.536ms
[debug]   Load.apply: structureIndex took 116.2086ms
[debug]   Load.apply: mkStreams took 1.1264ms
[info] loading global plugins from C:\Users\river\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2901.4666ms
[debug]           Load.loadUnit: plugins took 24.9532ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\river\IdeaProjects\Tidd_Project1_Q1\project
[debug]             Load.loadUnit: mkEval took 4.0434ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1_Q1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.5473 ms
[info] loading settings for project tidd_project1_q1-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(tidd_project1_q1-build) took 3.3089ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tidd_project1_q1-build, base: C:\Users\river\IdeaProjects\Tidd_Project1_Q1\project, plugins: List(<none>))) took 6.3752ms
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1_Q1\project, returning: (tidd_project1_q1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2287.9372ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.6949ms
[debug]         Load.loadUnit(file:/C:/Users/river/IdeaProjects/Tidd_Project1_Q1/project/, ...) took 2317.4028ms
[debug]       Load.apply: load took 2318.7186ms
[debug]       Load.apply: resolveProjects took 0.0686ms
[debug]       Load.apply: finalTransforms took 12.8747ms
[debug]       Load.apply: config.delegates took 0.3266ms
[debug]       Load.apply: Def.make(settings)... took 65.5363ms
[debug]       Load.apply: structureIndex took 34.4419ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\river\IdeaProjects\Tidd_Project1_Q1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5200.6646ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\river\IdeaProjects\Tidd_Project1_Q1
[debug]       Load.loadUnit: mkEval took 0.26ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1_Q1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3142 ms
[info] loading settings for project tidd_project1_q1 from build.sbt ...
[debug]         Load.resolveProject(tidd_project1_q1) took 41.2086ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tidd_project1_q1, base: C:\Users\river\IdeaProjects\Tidd_Project1_Q1, plugins: List(<none>))) took 44.406ms
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1_Q1, returning: (tidd_project1_q1)
[debug]     Load.loadUnit: loadedProjectsRaw took 1288.43ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.63ms
[debug]   Load.loadUnit(file:/C:/Users/river/IdeaProjects/Tidd_Project1_Q1/, ...) took 6499.1676ms
[debug] Load.apply: load took 6500.658ms
[debug] Load.apply: resolveProjects took 0.0612ms
[debug] Load.apply: finalTransforms took 22.2248ms
[debug] Load.apply: config.delegates took 0.2909ms
[debug] Load.apply: Def.make(settings)... took 60.9783ms
[debug] Load.apply: structureIndex took 27.8755ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to Tidd_Project1_Q1 (in build file:/C:/Users/river/IdeaProjects/Tidd_Project1_Q1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52961 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52961, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Tidd_Project1_Q1 (in build file:/C:/Users/river/IdeaProjects/Tidd_Project1_Q1/)
[debug] > Exec(idea-shell, None, None)
