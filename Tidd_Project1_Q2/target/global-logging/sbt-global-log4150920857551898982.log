[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\river\AppData\Local\Temp\idea11.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\river\AppData\Local\Temp\idea11.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.1 (Eclipse OpenJ9 Java 1.8.0_265)
[debug]       Load.loadUnit: plugins took 91.7507ms
[debug]       Load.loadUnit: defsScala took 0.2177ms
[debug] [Loading] Scanning directory C:\Users\river\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.3103 ms
[debug]           Load.resolveProject(global-plugins) took 87.5084ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\river\.sbt\1.0\plugins, plugins: List(<none>))) took 129.8356ms
[debug] [Loading] Done in C:\Users\river\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 153.0184ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3211ms
[debug]     Load.loadUnit(file:/C:/Users/river/.sbt/1.0/plugins/, ...) took 254.5415ms
[debug]   Load.apply: load took 1304.7758ms
[debug]   Load.apply: resolveProjects took 5.5049ms
[debug]   Load.apply: finalTransforms took 114.5341ms
[debug]   Load.apply: config.delegates took 10.8206ms
[debug]   Load.apply: Def.make(settings)... took 1979.9616ms
[debug]   Load.apply: structureIndex took 143.9507ms
[debug]   Load.apply: mkStreams took 1.8372ms
[info] loading global plugins from C:\Users\river\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6095.5682ms
[debug]           Load.loadUnit: plugins took 30.5971ms
[debug]           Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2\project
[debug]             Load.loadUnit: mkEval took 4.4079ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6178 ms
[info] loading settings for project tidd_project1_q2-build from plugins.sbt,idea11.sbt ...
[debug]               Load.resolveProject(tidd_project1_q2-build) took 2.3795ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tidd_project1_q2-build, base: C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2\project, plugins: List(<none>))) took 5.4796ms
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2\project, returning: (tidd_project1_q2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 192.0654ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.2781ms
[debug]         Load.loadUnit(file:/C:/Users/river/IdeaProjects/Tidd_Project1/Tidd_Project1_Q2/project/, ...) took 227.8389ms
[debug]       Load.apply: load took 229.0777ms
[debug]       Load.apply: resolveProjects took 0.0703ms
[debug]       Load.apply: finalTransforms took 13.1863ms
[debug]       Load.apply: config.delegates took 0.3279ms
[debug]       Load.apply: Def.make(settings)... took 85.9311ms
[debug]       Load.apply: structureIndex took 37.5112ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2582.8116ms
[debug]     Load.loadUnit: defsScala took 0.006ms
[debug] [Loading] Scanning directory C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2
[debug]       Load.loadUnit: mkEval took 0.3895ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.7379 ms
[info] loading settings for project tidd_project1_q2 from build.sbt ...
[debug]         Load.resolveProject(tidd_project1_q2) took 50.5296ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tidd_project1_q2, base: C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2, plugins: List(<none>))) took 56.1974ms
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2, returning: (tidd_project1_q2)
[debug]     Load.loadUnit: loadedProjectsRaw took 188.4202ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.1657ms
[debug]   Load.loadUnit(file:/C:/Users/river/IdeaProjects/Tidd_Project1/Tidd_Project1_Q2/, ...) took 2777.1242ms
[debug] Load.apply: load took 2779.0303ms
[debug] Load.apply: resolveProjects took 0.0834ms
[debug] Load.apply: finalTransforms took 26.017ms
[debug] Load.apply: config.delegates took 0.2938ms
[debug] Load.apply: Def.make(settings)... took 83.8081ms
[debug] Load.apply: structureIndex took 32.2416ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to Tidd_Project1_Q2 (in build file:/C:/Users/river/IdeaProjects/Tidd_Project1/Tidd_Project1_Q2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59648 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59648, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Tidd_Project1_Q2 (in build file:/C:/Users/river/IdeaProjects/Tidd_Project1/Tidd_Project1_Q2/)
[debug] > Exec(idea-shell, None, None)
