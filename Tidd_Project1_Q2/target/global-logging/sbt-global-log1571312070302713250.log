[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\river\AppData\Local\Temp\idea11.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\river\AppData\Local\Temp\idea11.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.1 (Eclipse OpenJ9 Java 1.8.0_265)
[debug]       Load.loadUnit: plugins took 91.7156ms
[debug]       Load.loadUnit: defsScala took 0.2711ms
[debug] [Loading] Scanning directory C:\Users\river\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.0425 ms
[debug]           Load.resolveProject(global-plugins) took 37.2155ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\river\.sbt\1.0\plugins, plugins: List(<none>))) took 73.9797ms
[debug] [Loading] Done in C:\Users\river\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 93.011ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2379ms
[debug]     Load.loadUnit(file:/C:/Users/river/.sbt/1.0/plugins/, ...) took 191.8748ms
[debug]   Load.apply: load took 363.1666ms
[debug]   Load.apply: resolveProjects took 4.8207ms
[debug]   Load.apply: finalTransforms took 119.3474ms
[debug]   Load.apply: config.delegates took 9.5125ms
[debug]   Load.apply: Def.make(settings)... took 1047.7333ms
[debug]   Load.apply: structureIndex took 151.0857ms
[debug]   Load.apply: mkStreams took 1.3348ms
[info] loading global plugins from C:\Users\river\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3725.4699ms
[debug]           Load.loadUnit: plugins took 31.5441ms
[debug]           Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2\project
[debug]             Load.loadUnit: mkEval took 2.8567ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.8915 ms
[info] loading settings for project tidd_project1_q2-build from plugins.sbt,idea11.sbt ...
[debug]               Load.resolveProject(tidd_project1_q2-build) took 8.0181ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tidd_project1_q2-build, base: C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2\project, plugins: List(<none>))) took 11.5529ms
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2\project, returning: (tidd_project1_q2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 196.946ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.1163ms
[debug]         Load.loadUnit(file:/C:/Users/river/IdeaProjects/Tidd_Project1/Tidd_Project1_Q2/project/, ...) took 234.6423ms
[debug]       Load.apply: load took 236.5157ms
[debug]       Load.apply: resolveProjects took 0.1526ms
[debug]       Load.apply: finalTransforms took 17.4724ms
[debug]       Load.apply: config.delegates took 0.2751ms
[debug]       Load.apply: Def.make(settings)... took 85.5222ms
[debug]       Load.apply: structureIndex took 39.881ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 892.7914ms
[debug]     Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2
[debug]       Load.loadUnit: mkEval took 0.2969ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.6563 ms
[info] loading settings for project tidd_project1_q2 from build.sbt ...
[debug]         Load.resolveProject(tidd_project1_q2) took 50.5311ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tidd_project1_q2, base: C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2, plugins: List(<none>))) took 55.1576ms
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project1\Tidd_Project1_Q2, returning: (tidd_project1_q2)
[debug]     Load.loadUnit: loadedProjectsRaw took 178.6894ms
[debug]     Load.loadUnit: cleanEvalClasses took 21.4545ms
[debug]   Load.loadUnit(file:/C:/Users/river/IdeaProjects/Tidd_Project1/Tidd_Project1_Q2/, ...) took 1093.6285ms
[debug] Load.apply: load took 1096.2427ms
[debug] Load.apply: resolveProjects took 0.1345ms
[debug] Load.apply: finalTransforms took 32.3355ms
[debug] Load.apply: config.delegates took 0.3738ms
[debug] Load.apply: Def.make(settings)... took 113.1985ms
[debug] Load.apply: structureIndex took 36.0372ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to Tidd_Project1_Q2 (in build file:/C:/Users/river/IdeaProjects/Tidd_Project1/Tidd_Project1_Q2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59430 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59430, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Tidd_Project1_Q2 (in build file:/C:/Users/river/IdeaProjects/Tidd_Project1/Tidd_Project1_Q2/)
[debug] > Exec(idea-shell, None, None)
